/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.inventory.UI;

import com.inventory.Constants.Constants;
import com.inventory.DAO.CustomerDAO;
import com.inventory.DAO.EggDAO;
import com.inventory.DAO.ProductDAO;
import com.inventory.DTO.EggDTO;
import com.inventory.DTO.ProductDTO;

import javax.swing.*;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author asjad
 */
public class EggPage extends javax.swing.JPanel {

    String username;
    Dashboard dashboard;
    int quantity;
    int userID;
    String prodCode;

    /**
     * Creates new form SalesPage
     */
    public EggPage(String username, Dashboard dashboard) {
        initComponents();
        this.username = username;
        this.dashboard = dashboard;
        custNameLabel.setVisible(false);
        prodNameLabel.setVisible(false);
        loadDataSet();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        sellPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        lbDate = new javax.swing.JLabel();
        lbVenda = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtcProduto = new javax.swing.JTextField();
        txtSell = new javax.swing.JTextField();
        quantityText = new javax.swing.JTextField();
        txtDate = new com.toedter.calendar.JDateChooser();
        breakEggsButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        custNameLabel = new javax.swing.JLabel();
        prodNameLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        nameBreakLabel = new javax.swing.JLabel();
        nameBreakText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        salesTable = new javax.swing.JTable();
        searchText = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();

        jLabel1.setFont(new java.awt.Font("Impact", 0, 24)); // NOI18N
        jLabel1.setText("GERIR SUAS QUEBRAS DE OVO");

        sellPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Sell Product"));

        jLabel3.setText("Codigo do Produto:");

        lbDate.setText("Data:");

        lbVenda.setText("Preco de venda:");

        jLabel6.setText("Quantidade:");

        txtcProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtcProdutoKeyReleased(evt);
            }
        });

        txtSell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSellActionPerformed(evt);
            }
        });

        txtDate.setMaxSelectableDate(new java.util.Date(253370797285000L));
        txtDate.setMinSelectableDate(new java.util.Date(-62135737115000L));

        breakEggsButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        breakEggsButton.setText("QUEBRAR OVOS");
        breakEggsButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        breakEggsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                breakEggsButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Apagar");
        deleteButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        clearButton.setText("Limpar");
        clearButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        custNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        prodNameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        prodNameLabel.setLabelFor(txtcProduto);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("# Nota: Esta função ainda está em desenvolvimento.\n# Pode apresentar bugs e falhas nos cálculos.\n");
        jScrollPane2.setViewportView(jTextArea1);

        nameBreakLabel.setText("Nome de quebra:");

        javax.swing.GroupLayout sellPanelLayout = new javax.swing.GroupLayout(sellPanel);
        sellPanel.setLayout(sellPanelLayout);
        sellPanelLayout.setHorizontalGroup(
            sellPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sellPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sellPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(breakEggsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(sellPanelLayout.createSequentialGroup()
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clearButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(sellPanelLayout.createSequentialGroup()
                        .addGroup(sellPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(prodNameLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, sellPanelLayout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtcProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, sellPanelLayout.createSequentialGroup()
                                .addGroup(sellPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(sellPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(sellPanelLayout.createSequentialGroup()
                                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                        .addGroup(sellPanelLayout.createSequentialGroup()
                                            .addComponent(lbVenda, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
                                            .addGap(6, 6, 6)))
                                    .addGroup(sellPanelLayout.createSequentialGroup()
                                        .addGroup(sellPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lbDate, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(nameBreakLabel))
                                        .addGap(32, 32, 32)))
                                .addGroup(sellPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtSell)
                                    .addComponent(quantityText)
                                    .addComponent(nameBreakText))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(custNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        sellPanelLayout.setVerticalGroup(
            sellPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sellPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(sellPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(custNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(sellPanelLayout.createSequentialGroup()
                        .addGroup(sellPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtcProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(prodNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(sellPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(sellPanelLayout.createSequentialGroup()
                                .addComponent(nameBreakLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, sellPanelLayout.createSequentialGroup()
                                .addComponent(nameBreakText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(sellPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbDate, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(sellPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSell, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(sellPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(quantityText, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(28, 28, 28)
                .addComponent(breakEggsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(sellPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton)
                    .addComponent(clearButton))
                .addContainerGap())
        );

        salesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        salesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                salesTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(salesTable);

        searchText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTextKeyReleased(evt);
            }
        });

        jLabel7.setText("Procurar:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 429, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(sellPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sellPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(60, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        if (salesTable.getSelectedRow() < 0)
            JOptionPane.showMessageDialog(this, "Porfavor selecione uma entrada na tabela que deseja apagar.");
        else {
            int opt = JOptionPane.showConfirmDialog(
                    this,
                    "Tem certeza que deseja eliminar essa venda ?",
                    "Confirmacao",
                    JOptionPane.YES_NO_OPTION);
            if (opt == JOptionPane.YES_OPTION) {
                new EggDAO().deleteSaleDAO(
                        salesTable.getValueAt(salesTable.getSelectedRow(), 1).toString());
                //      new EggDAO().editSoldStock(
                //        salesTable.getValueAt(salesTable.getSelectedRow(), 1).toString(), quantity);
                loadDataSet();
            }
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
//        custCodeText.setText("");
        custNameLabel.setText("");
        custNameLabel.setVisible(false);
        txtcProduto.setText("");
        prodNameLabel.setText("");
        prodNameLabel.setVisible(false);
        txtDate.setDate(null);
        txtSell.setText("");
        quantityText.setText("");
        loadDataSet();
    }//GEN-LAST:event_clearButtonActionPerformed

    private void breakEggsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_breakEggsButtonActionPerformed
        try {
            EggDTO productDTO = new EggDTO();
            ProductDAO productDAO = new ProductDAO();
            ProductPage pP = new ProductPage();
            
            // Validação dos campos de entrada
            if (txtcProduto.getText().isEmpty() || txtDate.getDate() == null
                    || nameBreakText.getText().isEmpty() || quantityText.getText().isEmpty()
                    || txtSell.getText().isEmpty()) {
                JOptionPane.showMessageDialog(this, "[CMQ01] Por favor, insira todos os dados necessários.");
                return;
            }
            
            
            String prodCode = txtcProduto.getText();

            String oldBrand = null;
            Double oldCostPrice = null;
            int actualQuantity = 0;

            // Verificação se o produto existe e obtenção dos dados
            oldBrand = productDAO.getBrand(prodCode);
            oldCostPrice = productDAO.getProdCost(prodCode);
            actualQuantity = productDAO.getQuantityFromCode(prodCode);
            
            // Configuração do DTO
            productDTO.setProdCode(pP.GenUniqueCode("Quebra"));
            productDTO.setProdName(nameBreakText.getText());
            productDTO.setDate(txtDate.getDate().toString());
            productDTO.setQuantity(Integer.parseInt(quantityText.getText()));
            productDTO.setProdType("Quebra");
            productDTO.setBrand(oldBrand);
            productDTO.setCostPrice(oldCostPrice);
            productDTO.setSellPrice(Double.parseDouble(txtSell.getText()));
            productDTO.setUserID(userID);

            // Verificação se a quantidade de quebra não excede o estoque disponível
            if (productDTO.getQuantity() > actualQuantity) {
                JOptionPane.showMessageDialog(this, "[CMQ04] Desculpa, o número de quebras excede o estoque disponível!");
                return;
            }
            productDAO.updateStock(prodCode, actualQuantity - productDTO.getQuantity());
            new EggDAO().addEggDAO(productDTO);
            loadDataSet();
            JOptionPane.showMessageDialog(this, "Quebra adcionada com sucesso!");
        } catch (SQLException ex) {
            Logger.getLogger(EggPage.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_breakEggsButtonActionPerformed

    private Double eggCost(String prodCode, String Category) {
        Double eggCost = null;
        ProductDAO productDAO = new ProductDAO();
        Double Cost = productDAO.getProdCost(prodCode);
        if (Category.equals("Ovo")) {
            eggCost = Cost / Constants.NR_OVO_POR_CAIXA_DE_OVO;
        }
        if (Category.equals("Meia Duzia de ovo")) {
            eggCost = Cost / Constants.NR_MEIA_DUZIA_POR_CAIXA_DE_OVO;
        }
        if (Category.equals("Favo de ovo")) {
            eggCost = Cost / Constants.NR_FAVO_POR_CAIXA_DE_OVO;
        }
        if (Category.equals("Caixa ovo")) {
            eggCost = Cost;
        }
        return eggCost;
    }


    private void salesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salesTableMouseClicked
        /*     int row = salesTable.getSelectedRow();
        int col = salesTable.getColumnCount();
        Object[] data = new Object[col];
        for (int i = 0; i < col; i++) {
            data[i] = salesTable.getValueAt(row, i);
        }
        quantity = Integer.parseInt(data[3].toString());
        prodCode = data[1].toString();*/
    }//GEN-LAST:event_salesTableMouseClicked

    private void txtcProdutoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcProdutoKeyReleased
        try {
            ResultSet resultSet = new CustomerDAO().getProdName(txtcProduto.getText());
            if (resultSet.next()) {
                prodNameLabel.setText("Nome: "
                        + resultSet.getString("productname")
                        + " | Quantidade Disponivel: "
                        + resultSet.getString("quantity"));
                Double sellPrice = new ProductDAO().getProdSell(txtcProduto.getText());
                txtSell.setText(sellPrice.toString());
            } else {
                prodNameLabel.setText("||   Produto inexistente no inventario.  ||");
            }
            prodNameLabel.setVisible(true);
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtcProdutoKeyReleased

    private void searchTextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTextKeyReleased
        loadSearchData(searchText.getText());
    }//GEN-LAST:event_searchTextKeyReleased

    private void txtSellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSellActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSellActionPerformed

    // Method to load data into table
    public void loadDataSet() {
        try {
            EggDAO productDAO = new EggDAO();
            salesTable.setModel(productDAO.buildTableModel(productDAO.getEggsInfo()));
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // Method to display search result in table
    public void loadSearchData(String text) {
        try {
            EggDAO productDAO = new EggDAO();
            salesTable.setModel(productDAO.buildTableModel(productDAO.getSalesSearch(text)));
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton breakEggsButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JLabel custNameLabel;
    private javax.swing.JButton deleteButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel lbDate;
    private javax.swing.JLabel lbVenda;
    private javax.swing.JLabel nameBreakLabel;
    private javax.swing.JTextField nameBreakText;
    private javax.swing.JLabel prodNameLabel;
    private javax.swing.JTextField quantityText;
    private javax.swing.JTable salesTable;
    private javax.swing.JTextField searchText;
    private javax.swing.JPanel sellPanel;
    private com.toedter.calendar.JDateChooser txtDate;
    private javax.swing.JTextField txtSell;
    private javax.swing.JTextField txtcProduto;
    // End of variables declaration//GEN-END:variables
}
